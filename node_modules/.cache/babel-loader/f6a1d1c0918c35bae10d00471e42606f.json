{"ast":null,"code":"class Api {\n  constructor(config) {\n    this._urlRequest = config.urlRequest;\n    this._headers = config.headers;\n    this._loadingStart;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Error: ${res.status}`);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._urlRequest}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(res => this._checkResponse(res));\n  }\n\n  getInitialCards() {\n    return fetch(`${this._urlRequest}/cards`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(res => this._checkResponse(res));\n  }\n\n  getInitialInfo() {\n    return Promise.all([this.getUserInfo(), this.getInitialCards()]);\n  }\n\n  setUserInfo(newUserInfo) {\n    return fetch(`${this._urlRequest}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(newUserInfo)\n    }).then(res => {\n      return this._checkResponse(res);\n    });\n  }\n\n  setUserAvatar(newAvatar) {\n    return fetch(`${this._urlRequest}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(newAvatar)\n    }).then(res => {\n      return this._checkResponse(res);\n    });\n  }\n\n  addCard(cardData) {\n    return fetch(`${this._urlRequest}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(cardData)\n    }).then(res => {\n      return this._checkResponse(res);\n    });\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._urlRequest}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => {\n      return this._checkResponse(res);\n    });\n  }\n\n  setCardLike(cardId) {\n    return fetch(`${this._urlRequest}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(res => {\n      return this._checkResponse(res);\n    });\n  }\n\n  setRemoveLike(cardId) {\n    return fetch(`${this._urlRequest}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => {\n      return this._checkResponse(res);\n    });\n  }\n\n}\n\nconst api = new Api({\n  urlRequest: 'https://nomoreparties.co/v1/cohort-39',\n  headers: {\n    'authorization': 'c194112f-b44f-441c-9a8f-47ca2f04bd5c',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"sources":["/Users/yaroslavbarbakov/Documents/GitHub/mesto-react/src/utils/api.js"],"names":["Api","constructor","config","_urlRequest","urlRequest","_headers","headers","_loadingStart","_checkResponse","res","ok","json","Promise","reject","status","getUserInfo","fetch","method","then","getInitialCards","getInitialInfo","all","setUserInfo","newUserInfo","body","JSON","stringify","setUserAvatar","newAvatar","addCard","cardData","deleteCard","cardId","setCardLike","setRemoveLike","api"],"mappings":"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","sourcesContent":["class Api{\n    constructor(config){\n        this._urlRequest = config.urlRequest\n        this._headers = config.headers\n        this._loadingStart\n    }\n\n    _checkResponse(res) {\n        if (res.ok) {\n            return res.json()\n        }\n        return Promise.reject(`Error: ${res.status}`)\n    }\n\n    getUserInfo(){\n        return fetch(`${this._urlRequest}/users/me`, {\n            method: 'GET',\n            headers: this._headers\n        })\n        .then( res => this._checkResponse(res))\n    }\n\n    getInitialCards(){\n        return fetch(`${this._urlRequest}/cards`, {\n            method: 'GET',\n            headers: this._headers\n        })\n        .then( res => this._checkResponse(res))\n    }\n\n    getInitialInfo(){\n        return Promise.all([this.getUserInfo(), this.getInitialCards()])\n    }\n\n    setUserInfo(newUserInfo){\n        return fetch(`${this._urlRequest}/users/me`, {\n        method: 'PATCH',\n        headers: this._headers,\n        body: JSON.stringify(newUserInfo)\n        })\n        .then( res => {return this._checkResponse(res)})\n    }\n\n    setUserAvatar(newAvatar){\n        return fetch(`${this._urlRequest}/users/me/avatar`, {\n        method: 'PATCH',\n        headers: this._headers,\n        body: JSON.stringify(newAvatar)\n        })\n        .then( res => {return this._checkResponse(res)})\n    }\n\n    addCard(cardData){\n        return fetch(`${this._urlRequest}/cards`, {\n        method: 'POST',\n        headers: this._headers,\n        body: JSON.stringify(cardData)\n        })\n        .then( res => {return this._checkResponse(res)})\n    }\n\n    deleteCard(cardId){\n        return fetch(`${this._urlRequest}/cards/${cardId}`, {\n        method: 'DELETE',\n        headers: this._headers\n        })\n        .then( res => {\n            return this._checkResponse(res)\n        })\n    }\n\n    setCardLike(cardId){\n        return fetch(`${this._urlRequest}/cards/${cardId}/likes`, {\n            method: 'PUT',\n            headers: this._headers\n            })\n            .then(res => {\n                return this._checkResponse(res)\n            })\n    }\n\n    setRemoveLike(cardId){\n        return fetch(`${this._urlRequest}/cards/${cardId}/likes`, {\n            method: 'DELETE',\n            headers: this._headers\n            })\n            .then(res => {\n                return this._checkResponse(res)\n            })\n    }\n    \n}\n\nconst api = new Api(\n    {\n        urlRequest: 'https://nomoreparties.co/v1/cohort-39',\n        headers: {\n            'authorization': 'c194112f-b44f-441c-9a8f-47ca2f04bd5c',\n            'Content-Type': 'application/json'\n        }\n    }\n)\n\nexport default api"]},"metadata":{},"sourceType":"module"}